{
    "appid": "2aba17a5-92c8-4aae-a4ed-2c6eff83b0c0",
    "name": "AWS S3",
    "description": "This app integrates with AWS S3 to perform investigative actions",
    "type": "devops",
    "product_vendor": "AWS",
    "logo": "aws.png",
    "product_name": "S3",
    "product_version_regex": ".*",
    "publisher": "Phantom",
    "license": "Copyright (c) Phantom Cyber Corporation, 2017",
    "app_version": "1.0.0",
    "utctime_updated": "2017-12-12T02:03:49.744779Z",
    "package_name": "phantom_awss3",
    "main_module": "s3_connector.pyc",
    "min_phantom_version": "3.0.251",
    "app_wizard_version": "1.0.0",
    "pip_dependencies": {
        "wheel": [
            {
                "module": "boto3",
                "input_file": "wheels/boto3-1.4.7-py2.py3-none-any.whl"
            },
            {
                "module": "s3transfer",
                "input_file": "wheels/s3transfer-0.1.11-py2.py3-none-any.whl"
            },
            {
                "module": "botocore",
                "input_file": "wheels/botocore-1.7.18-py2.py3-none-any.whl"
            },
            {
                "module": "futures",
                "input_file": "wheels/futures-3.1.1-py2-none-any.whl"
            },
            {
                "module": "docutils",
                "input_file": "wheels/docutils-0.14-py2-none-any.whl"
            },
            {
                "module": "jmespath",
                "input_file": "wheels/jmespath-0.9.3-py2.py3-none-any.whl"
            }
        ]
    },
    "configuration": {
        "access_key": {
            "description": "Access Key",
            "data_type": "password",
            "required": true,
            "order": 0
        },
        "secret_key": {
            "description": "Secret Key",
            "data_type": "password",
            "required": true,
            "order": 1
        },
        "region": {
            "description": "Region",
            "data_type": "string",
            "required": true,
            "value_list": [
                "US East (Ohio)",
                "US East (N. Virginia)",
                "US West (N. California)",
                "US West (Oregon)",
                "Canada (Central)",
                "Asia Pacific (Mumbai)",
                "Asia Pacific (Tokyo)",
                "Asia Pacific (Seoul)",
                "Asia Pacific (Singapore)",
                "Asia Pacific (Sydney)",
                "China (Ningxia)",
                "EU (Frankfurt)",
                "EU (Ireland)",
                "EU (London)",
                "South Americia (Sao Paulo)"
            ],
            "order": 2
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "list buckets",
            "identifier": "list_buckets",
            "description": "List all buckets configured on S3",
            "type": "investigate",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Owner.DisplayName",
                    "data_type": "string",
                    "example_values": [
                        "herman"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Owner.ID",
                    "data_type": "string",
                    "example_values": [
                        "042b1aa6d5faa5cfe9d016645ce14be41235ed6f94c988c6af6550f439e3f444"
                    ],
                    "contains": [
                        "aws canonical ID",
                        "sha256"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Buckets.*.CreationDate",
                    "data_type": "string",
                    "column_name": "Created",
                    "column_order": 1,
                    "example_values": [
                        "2017-09-13 21:33:57"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Buckets.*.Name",
                    "data_type": "string",
                    "column_name": "Name",
                    "column_order": 0,
                    "example_values": [
                        "aws-athena-query-results-157568067690-us-west-2"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HostId",
                    "data_type": "string",
                    "example_values": [
                        "6Y10uFMWGRF9mu1P94EVq9YpbFFkSxGEGU9ppx6hBVRiaaEANjyS2zuZoM5tt95QYOve9j0l6r4="
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "DE264B470D5AD443"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-id-2",
                    "data_type": "string",
                    "example_values": [
                        "6Y10uFMWGRF9mu1P94EVq9YpbFFkSxGEGU9ppx6hBVRiaaEANjyS2zuZoM5tt95QYOve9j0l6r4="
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                    "data_type": "string",
                    "example_values": [
                        "AmazonS3"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.transfer-encoding",
                    "data_type": "string",
                    "example_values": [
                        "chunked"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-request-id",
                    "data_type": "string",
                    "example_values": [
                        "DE264B470D5AD443"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                    "data_type": "string",
                    "example_values": [
                        "Tue, 12 Dec 2017 21:40:22 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                    "data_type": "string",
                    "example_values": [
                        "application/xml"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Num buckets: 4"
                    ]
                },
                {
                    "data_path": "action_result.summary.num_buckets",
                    "data_type": "numeric",
                    "example_values": [
                        4
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list objects",
            "identifier": "list_objects",
            "description": "List objects in a bucket",
            "verbose": "This action will list all objects in the given <b>bucket</b>. It will recursively list all objects in each folder in the bucket as well.<br><br>If given the <b>key</b> parameter, the action will start listing objects in the specified folder. The <b>key</b> must be a full path from the root of the <b>bucket</b>.<br><br>The <b>limit</b> parameter has a maximum value of 1000. If no <b>limit</b> is provided, it will default to 1000. If more objects than the specified <b>limit</b> exist, the action will return a <b>NextContinuationToken</b>. To get the next batch of objects, pass this token in a new action as the <b>continuation_token</b>.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "bucket": {
                    "description": "List objects in this bucket",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws s3 bucket"
                    ],
                    "order": 0
                },
                "key": {
                    "description": "List objects under this key",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [
                        "aws s3 key"
                    ],
                    "order": 1
                },
                "limit": {
                    "description": "Max number of objects to list",
                    "data_type": "numeric",
                    "required": false,
                    "order": 2
                },
                "continuation_token": {
                    "description": "Use this parameter to get the next set of objects from a previous action",
                    "data_type": "string",
                    "required": false,
                    "primary": true,
                    "contains": [
                        "aws s3 continuation token"
                    ],
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.bucket",
                    "data_type": "string",
                    "contains": [
                        "aws s3 bucket"
                    ],
                    "example_values": [
                        "brian-test-s3-app"
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Num objects: 2"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.Name",
                    "data_type": "string",
                    "example_values": [
                        "brian-test-s3-app"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HostId",
                    "data_type": "string",
                    "example_values": [
                        "Ys1n2EOmKqMX4Z/3VxSzsW7ZQXFgj7/AkkMZLhiliLPKahOTbKTwMzsdthkBMBoSo+blbJvnY7Y="
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "10B562C38DD0D76A"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                    "data_type": "string",
                    "example_values": [
                        "Thu, 14 Dec 2017 00:39:10 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-id-2",
                    "data_type": "string",
                    "example_values": [
                        "Ys1n2EOmKqMX4Z/3VxSzsW7ZQXFgj7/AkkMZLhiliLPKahOTbKTwMzsdthkBMBoSo+blbJvnY7Y="
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                    "data_type": "string",
                    "example_values": [
                        "AmazonS3"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.transfer-encoding",
                    "data_type": "string",
                    "example_values": [
                        "chunked"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-request-id",
                    "data_type": "string",
                    "example_values": [
                        "10B562C38DD0D76A"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-bucket-region",
                    "data_type": "string",
                    "example_values": [
                        "us-west-1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                    "data_type": "string",
                    "example_values": [
                        "application/xml"
                    ]
                },
                {
                    "data_path": "action_result.data.*.StartAfter",
                    "data_type": "string",
                    "example_values": [
                        "test_folder/deeper_test_folder"
                    ]
                },
                {
                    "data_path": "action_result.data.*.MaxKeys",
                    "data_type": "numeric",
                    "example_values": [
                        3
                    ]
                },
                {
                    "data_path": "action_result.data.*.Prefix",
                    "data_type": "string",
                    "example_values": [
                        ""
                    ]
                },
                {
                    "data_path": "action_result.data.*.KeyCount",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.data.*.IsTruncated",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.Contents.*.LastModified",
                    "data_type": "string",
                    "column_name": "Last Modified",
                    "column_order": 3,
                    "example_values": [
                        "2017-12-13 23:22:47"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Contents.*.ETag",
                    "data_type": "string",
                    "example_values": [
                        "\"d41d8cd98f00b204e9800998ecf8427e\""
                    ]
                },
                {
                    "data_path": "action_result.data.*.Contents.*.StorageClass",
                    "data_type": "string",
                    "column_name": "Storage Class",
                    "column_order": 1,
                    "example_values": [
                        "STANDARD"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Contents.*.Key",
                    "data_type": "string",
                    "column_name": "Key",
                    "column_order": 0,
                    "example_values": [
                        "test_folder/deeper_test_folder/"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Contents.*.Owner.DisplayName",
                    "data_type": "string",
                    "column_name": "Owner",
                    "column_order": 2,
                    "example_values": [
                        "herman"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Contents.*.Owner.ID",
                    "data_type": "string",
                    "example_values": [
                        "042b1aa6d5faa5cfe9d016645ce14be41235ed6f94c988c6af6550f439e3f444"
                    ],
                    "contains": [
                        "aws canonical ID",
                        "sha256"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Contents.*.Size",
                    "data_type": "numeric",
                    "column_name": "Size",
                    "column_order": 4,
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.parameter.key",
                    "data_type": "string",
                    "contains": [
                        "aws s3 key"
                    ],
                    "example_values": [
                        "test_folder/deeper_test_folder"
                    ]
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "numeric",
                    "example_values": [
                        3
                    ]
                },
                {
                    "data_path": "action_result.parameter.continuation_token",
                    "data_type": "string",
                    "contains": [
                        "aws s3 continuation token"
                    ],
                    "example_values": [
                        "1gpyNT6V4At5pjvBmQhRU2D2ehqyGrZJaHJ4VLYm5udxQTTi+8xMyUg=="
                    ]
                },
                {
                    "data_path": "action_result.summary.num_objects",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get object",
            "identifier": "get_object",
            "description": "Get an object",
            "verbose": "This action will download the specified file to the vault. The downloaded file will be given a name matching the given key.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "bucket": {
                    "description": "Object bucket",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws s3 bucket"
                    ],
                    "order": 0
                },
                "key": {
                    "description": "Object Key",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws s3 key"
                    ],
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.AcceptRanges",
                    "data_type": "string",
                    "example_values": [
                        "bytes"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ContentType",
                    "data_type": "string",
                    "example_values": [
                        "image/jpeg"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HostId",
                    "data_type": "string",
                    "example_values": [
                        "0c15dTU8vBsBNhlyoKPCGGhpHJtcquJD+vDG0wiTMYVVnX6ValrTB/01iTZVwm8VYrmPBcj276E="
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.RetryAttempts",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HTTPStatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "8E5ADEED9D510876"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HTTPHeaders.x-amz-tagging-count",
                    "data_type": "string",
                    "example_values": [
                        "2"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HTTPHeaders.content-length",
                    "data_type": "string",
                    "example_values": [
                        "164461"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HTTPHeaders.x-amz-id-2",
                    "data_type": "string",
                    "example_values": [
                        "0c15dTU8vBsBNhlyoKPCGGhpHJtcquJD+vDG0wiTMYVVnX6ValrTB/01iTZVwm8VYrmPBcj276E="
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HTTPHeaders.accept-ranges",
                    "data_type": "string",
                    "example_values": [
                        "bytes"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HTTPHeaders.server",
                    "data_type": "string",
                    "example_values": [
                        "AmazonS3"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HTTPHeaders.last-modified",
                    "data_type": "string",
                    "example_values": [
                        "Wed, 13 Dec 2017 23:23:36 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HTTPHeaders.etag",
                    "data_type": "string",
                    "example_values": [
                        "\"081649aeacde0097aeac161be406168d\""
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HTTPHeaders.x-amz-request-id",
                    "data_type": "string",
                    "example_values": [
                        "8E5ADEED9D510876"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HTTPHeaders.date",
                    "data_type": "string",
                    "example_values": [
                        "Mon, 18 Dec 2017 21:04:10 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ResponseMetadata.HTTPHeaders.content-type",
                    "data_type": "string",
                    "example_values": [
                        "image/jpeg"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.LastModified",
                    "data_type": "string",
                    "example_values": [
                        "2017-12-13 23:23:36"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ContentLength",
                    "data_type": "numeric",
                    "example_values": [
                        164461
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.filename",
                    "data_type": "string",
                    "example_values": [
                        "AA-ron_Rod-Gers.jpg"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.ETag",
                    "data_type": "string",
                    "example_values": [
                        "\"081649aeacde0097aeac161be406168d\""
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.vault_id",
                    "data_type": "string",
                    "example_values": [
                        "cde6248b8367f3a87bb6cc3dfc46fb9786200f88"
                    ],
                    "contains": [
                        "sha1",
                        "vault id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.TagCount",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.data.*.File.Metadata",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Tagging.TagSet.*.Key",
                    "data_type": "string",
                    "example_values": [
                        "Collorbone"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Tagging.TagSet.*.Value",
                    "data_type": "string",
                    "example_values": [
                        "Intact"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Tagging.ResponseMetadata.HostId",
                    "data_type": "string",
                    "example_values": [
                        "xHamNM+KJpg3EZSa6FujO8r0QfEoM0FJ4GY6Xh/l0QqkaqC18TPIzMFEJODUOOJIvKX6xO1TtRk="
                    ]
                },
                {
                    "data_path": "action_result.data.*.Tagging.ResponseMetadata.RetryAttempts",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.Tagging.ResponseMetadata.HTTPStatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.data.*.Tagging.ResponseMetadata.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "49CB0256C60608F4"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Tagging.ResponseMetadata.HTTPHeaders.date",
                    "data_type": "string",
                    "example_values": [
                        "Mon, 18 Dec 2017 21:04:10 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Tagging.ResponseMetadata.HTTPHeaders.x-amz-id-2",
                    "data_type": "string",
                    "example_values": [
                        "xHamNM+KJpg3EZSa6FujO8r0QfEoM0FJ4GY6Xh/l0QqkaqC18TPIzMFEJODUOOJIvKX6xO1TtRk="
                    ]
                },
                {
                    "data_path": "action_result.data.*.Tagging.ResponseMetadata.HTTPHeaders.transfer-encoding",
                    "data_type": "string",
                    "example_values": [
                        "chunked"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Tagging.ResponseMetadata.HTTPHeaders.x-amz-request-id",
                    "data_type": "string",
                    "example_values": [
                        "49CB0256C60608F4"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Tagging.ResponseMetadata.HTTPHeaders.server",
                    "data_type": "string",
                    "example_values": [
                        "AmazonS3"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.Owner.DisplayName",
                    "data_type": "string",
                    "example_values": [
                        "herman"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.Owner.ID",
                    "data_type": "string",
                    "example_values": [
                        "042b1aa6d5faa5cfe9d016645ce14be41235ed6f94c988c6af6550f439e3f444"
                    ],
                    "contains": [
                        "aws canonical ID",
                        "sha256"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.Grants.*.Grantee.Type",
                    "data_type": "string",
                    "example_values": [
                        "CanonicalUser"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.Grants.*.Grantee.DisplayName",
                    "data_type": "string",
                    "example_values": [
                        "herman"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.Grants.*.Grantee.ID",
                    "data_type": "string",
                    "example_values": [
                        "042b1aa6d5faa5cfe9d016645ce14be41235ed6f94c988c6af6550f439e3f444"
                    ],
                    "contains": [
                        "sha256"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.Grants.*.Permission",
                    "data_type": "string",
                    "example_values": [
                        "FULL_CONTROL"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.ResponseMetadata.HostId",
                    "data_type": "string",
                    "example_values": [
                        "ebJirNknxP6Y05DqTzHTBW6ph3Dlzw8XfO7l+d9vOxVcGd0UulOLUN8EwKEQml45TKWx04iLCSk="
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.ResponseMetadata.RetryAttempts",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.ResponseMetadata.HTTPStatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.ResponseMetadata.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "726A959A95F1E3FF"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.ResponseMetadata.HTTPHeaders.x-amz-id-2",
                    "data_type": "string",
                    "example_values": [
                        "ebJirNknxP6Y05DqTzHTBW6ph3Dlzw8XfO7l+d9vOxVcGd0UulOLUN8EwKEQml45TKWx04iLCSk="
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.ResponseMetadata.HTTPHeaders.server",
                    "data_type": "string",
                    "example_values": [
                        "AmazonS3"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.ResponseMetadata.HTTPHeaders.transfer-encoding",
                    "data_type": "string",
                    "example_values": [
                        "chunked"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.ResponseMetadata.HTTPHeaders.x-amz-request-id",
                    "data_type": "string",
                    "example_values": [
                        "726A959A95F1E3FF"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.ResponseMetadata.HTTPHeaders.date",
                    "data_type": "string",
                    "example_values": [
                        "Mon, 18 Dec 2017 21:04:10 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ACL.ResponseMetadata.HTTPHeaders.content-type",
                    "data_type": "string",
                    "example_values": [
                        "application/xml"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "File successfully added to vault"
                    ]
                },
                {
                    "data_path": "action_result.parameter.bucket",
                    "data_type": "string",
                    "contains": [
                        "aws s3 bucket"
                    ],
                    "example_values": [
                        "brian-test-s3-app"
                    ]
                },
                {
                    "data_path": "action_result.parameter.key",
                    "data_type": "string",
                    "contains": [
                        "aws s3 key"
                    ],
                    "example_values": [
                        "test_folder/AA-ron_Rod-Gers.jpg"
                    ]
                },
                {
                    "data_path": "action_result.summary.created_vault_id",
                    "data_type": "string",
                    "example_values": [
                        "cde6248b8367f3a87bb6cc3dfc46fb9786200f88"
                    ],
                    "contains": [
                        "sha1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "update object",
            "identifier": "update_object",
            "description": "Update an object",
            "verbose": "The <b>tags</b> parameter takes a JSON dictionary containing the tags that will be given to the specified <b>key</b> in the specified <b>bucket</b>. The dictionary should have the format:<br><br><pre>{<br>    &quot;tag1_key&quot;: &quot;tag1_value&quot;,<br>    &quot;tag2_key&quot;: &quot;tag2_value&quot;<br>    ...<br>}</pre><br>The <b>grants</b> parameter takes a dictionary where each key is a canonical user ID and each value is one of the following permissions:<ul><li>FULL_CONTROL</li><li>WRITE</li><li>WRITE_ACP</li><li>READ</li><li>READ_ACP</li></ul>An example JSON object would be:<br><br><pre>{<br>    &quot;111a11a11aa1111111aa11aaa1111a111a1aa111111a1a1a11aa11aa11a11aa1&quot;: &quot;FULL_CONTROL&quot;,<br>    &quot;222b22b22bb2222222bb22bbb2222b222b2bb222222b2b2b22bb22bb22b22bb2&quot;: &quot;READ&quot;<br>}</pre><br>The <b>owner</b> parameter takes the canonical ID of an AWS user. This parameter must be provided if the <b>grants</b> parameter is included (even if there is no desire to change the owner; in this case, just provide the ID of the current owner of the object).<br><br>WARNING: Calling this action will replace the object's current tags and permissions with the tags and permission supplied to this action. To avoid overwriting the object's present data, first run <b>get object</b> to get the current tag and permission dictionaries, then add new tags and grants to those dictionaries before calling this action.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "bucket": {
                    "description": "Vault ID of file to upload",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws s3 bucket"
                    ],
                    "order": 0
                },
                "key": {
                    "description": "Path to upload file to",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws s3 key"
                    ],
                    "order": 1
                },
                "grants": {
                    "description": "JSON dictionary of users and the permissions to grant them",
                    "data_type": "string",
                    "required": false,
                    "order": 2
                },
                "owner": {
                    "description": "Canonical ID of new owner",
                    "data_type": "string",
                    "required": false,
                    "contains": [
                        "aws canonical ID"
                    ],
                    "order": 3
                },
                "tags": {
                    "description": "JSON dictionary containing tags to give object",
                    "data_type": "string",
                    "required": false,
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.bucket",
                    "data_type": "string",
                    "contains": [
                        "aws s3 bucket"
                    ],
                    "column_name": "vault_id",
                    "column_order": 0,
                    "example_values": [
                        "brian-test-s3-app"
                    ]
                },
                {
                    "data_path": "action_result.parameter.key",
                    "data_type": "string",
                    "contains": [
                        "aws s3 key"
                    ],
                    "column_name": "path",
                    "column_order": 1,
                    "example_values": [
                        "test_folder/deeper_test_folder/Freddie.jpg"
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 2,
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Object successfully updated"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HostId",
                    "data_type": "string",
                    "example_values": [
                        "taFe2lslWgS35TL+WUaQpOG/qsCwJwcB6znO9Xu2/hZge0d4yHXuVbyDXMpwXl9806SfOC4jH2E="
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "311807E3C0FBF393"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                    "data_type": "string",
                    "example_values": [
                        "Mon, 18 Dec 2017 21:49:25 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-id-2",
                    "data_type": "string",
                    "example_values": [
                        "taFe2lslWgS35TL+WUaQpOG/qsCwJwcB6znO9Xu2/hZge0d4yHXuVbyDXMpwXl9806SfOC4jH2E="
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-request-id",
                    "data_type": "string",
                    "example_values": [
                        "311807E3C0FBF393"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                    "data_type": "string",
                    "example_values": [
                        "AmazonS3"
                    ]
                },
                {
                    "data_path": "action_result.parameter.tags",
                    "data_type": "string",
                    "example_values": [
                        "{\"Adrian Gonzalez\": \"Braves Legend\", \"Chipper\": \"HoFer\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.grants",
                    "data_type": "string",
                    "example_values": [
                        "{\"042b1aa6d5faa5cfe9d016645ce14be41235ed6f94c988c6af6550f439e3f444\": \"FULL_CONTROL\", \"105d70b19fe7594450bf60dbd5004d026f7ae739872e5a3b80ca16ea15e94df8\": \"FULL_CONTROL\"}"
                    ]
                },
                {
                    "data_path": "action_result.parameter.owner",
                    "data_type": "string",
                    "example_values": [
                        "042b1aa6d5faa5cfe9d016645ce14be41235ed6f94c988c6af6550f439e3f444"
                    ],
                    "contains": [
                        "sha256"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "create object",
            "identifier": "post_data",
            "description": "Create an object",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "bucket": {
                    "description": "Bucket to upload file to",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws s3 bucket"
                    ],
                    "order": 0
                },
                "key": {
                    "description": "Key to upload file as",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "aws s3 key"
                    ],
                    "order": 1
                },
                "vault_id": {
                    "description": "Vault ID of file to upload",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "vault id"
                    ],
                    "order": 2
                },
                "storage_class": {
                    "description": "Storage class for object",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                        "STANDARD",
                        "STANDARD_IA",
                        "REDUCED_REDUNDANCY"
                    ],
                    "default": "STANDARD",
                    "order": 3
                },
                "encryption": {
                    "description": "Encryption to apply to object",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                        "NONE",
                        "AES256",
                        "AWS:KMS"
                    ],
                    "default": "NONE",
                    "order": 4
                },
                "kms_key": {
                    "description": "KMS Key (Only if encryption is AWS:KMS)",
                    "data_type": "string",
                    "required": false,
                    "order": 5
                },
                "metadata": {
                    "description": "JSON dictionary containing metadata to give object",
                    "data_type": "string",
                    "required": false,
                    "order": 6
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ETag",
                    "data_type": "string",
                    "example_values": [
                        "\"1dcdb3d256476fe8e2887c146960e580\""
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HostId",
                    "data_type": "string",
                    "example_values": [
                        "Pny7y47Psu0yGvBsQGDEF7AOQXDl0N9AqocGVR08Cqw/Zku+tqrdK7SNkoVFEfJI9xpbsJUpH10="
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                    "data_type": "numeric",
                    "example_values": [
                        0
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                    "data_type": "numeric",
                    "example_values": [
                        200
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                    "data_type": "string",
                    "example_values": [
                        "C03C87504C56273E"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-storage-class",
                    "data_type": "string",
                    "example_values": [
                        "STANDARD_IA"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-id-2",
                    "data_type": "string",
                    "example_values": [
                        "Pny7y47Psu0yGvBsQGDEF7AOQXDl0N9AqocGVR08Cqw/Zku+tqrdK7SNkoVFEfJI9xpbsJUpH10="
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                    "data_type": "string",
                    "example_values": [
                        "AmazonS3"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-request-id",
                    "data_type": "string",
                    "example_values": [
                        "C03C87504C56273E"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.etag",
                    "data_type": "string",
                    "example_values": [
                        "\"1dcdb3d256476fe8e2887c146960e580\""
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                    "data_type": "string",
                    "example_values": [
                        "Mon, 18 Dec 2017 23:05:11 GMT"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-server-side-encryption",
                    "data_type": "string",
                    "example_values": [
                        "AES256"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ServerSideEncryption",
                    "data_type": "string",
                    "example_values": [
                        "AES256"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Object successfully updated"
                    ]
                },
                {
                    "data_path": "action_result.parameter.key",
                    "data_type": "string",
                    "contains": [
                        "aws s3 key"
                    ],
                    "example_values": [
                        "kappa.png"
                    ]
                },
                {
                    "data_path": "action_result.parameter.encryption",
                    "data_type": "string",
                    "example_values": [
                        "AES256"
                    ]
                },
                {
                    "data_path": "action_result.parameter.bucket",
                    "data_type": "string",
                    "contains": [
                        "aws s3 bucket"
                    ],
                    "example_values": [
                        "brian-test-s3-app"
                    ]
                },
                {
                    "data_path": "action_result.parameter.storage_class",
                    "data_type": "string",
                    "example_values": [
                        "STANDARD_IA"
                    ]
                },
                {
                    "data_path": "action_result.parameter.kms_key",
                    "data_type": "string",
                    "example_values": [
                        "234b9f7cd382ca2affe10176bf2c04aba6778e45"
                    ]
                },
                {
                    "data_path": "action_result.parameter.vault_id",
                    "data_type": "string",
                    "example_values": [
                        "306b9e7cd363cb2fdfc11176bc2f04ede7358f00"
                    ],
                    "contains": [
                        "vault id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.metadata",
                    "data_type": "string",
                    "example_values": [
                        "{\"Content-Language\": \"Doge\"}"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        }
    ]
}
